/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.dvsts.avaya.processing.domain;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** this is a sample avro schema to get you started. please edit */
@org.apache.avro.specific.AvroGenerated
public class AvayaSideEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5996283798309394354L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvayaSideEvent\",\"namespace\":\"com.dvsts.avaya.processing.domain\",\"doc\":\"this is a sample avro schema to get you started. please edit\",\"fields\":[{\"name\":\"idx\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"loss\",\"type\":[\"null\",\"int\"]},{\"name\":\"seqlossinstances\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"rtd\",\"type\":[\"null\",\"int\"]},{\"name\":\"burstdensity\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"alarm\",\"type\":[\"null\",\"int\"]},{\"name\":\"largestoutofsequence\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"packetcount1\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"gapdensity\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"packetcount2\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"burstduration\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"time\",\"type\":[\"null\",\"long\"]},{\"name\":\"gapduration\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"outofseqinstances\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"mos\",\"type\":[\"null\",\"float\"]},{\"name\":\"side\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"largestsequenceloss\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"dscpvalue\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"callindex\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"owd\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"jitter\",\"type\":[\"null\",\"int\"]},{\"name\":\"trace_delays\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"timestamp\",\"type\":[\"null\",\"long\"]},{\"name\":\"alert\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"trace\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"traceroute\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"lti_filename\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"client_id\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"ssrc1\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"ssrc2\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AvayaSideEvent> ENCODER =
      new BinaryMessageEncoder<AvayaSideEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AvayaSideEvent> DECODER =
      new BinaryMessageDecoder<AvayaSideEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<AvayaSideEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<AvayaSideEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AvayaSideEvent>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this AvayaSideEvent to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a AvayaSideEvent from a ByteBuffer. */
  public static AvayaSideEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public String idx;
  @Deprecated public Integer loss;
  @Deprecated public String seqlossinstances;
  @Deprecated public Integer rtd;
  @Deprecated public String burstdensity;
  @Deprecated public Integer alarm;
  @Deprecated public String largestoutofsequence;
  @Deprecated public String packetcount1;
  @Deprecated public String gapdensity;
  @Deprecated public String packetcount2;
  @Deprecated public String burstduration;
  @Deprecated public Long time;
  @Deprecated public String gapduration;
  @Deprecated public String outofseqinstances;
  @Deprecated public Float mos;
  @Deprecated public String side;
  @Deprecated public String largestsequenceloss;
  @Deprecated public String dscpvalue;
  @Deprecated public String callindex;
  @Deprecated public String owd;
  @Deprecated public Integer jitter;
  @Deprecated public String trace_delays;
  @Deprecated public Long timestamp;
  @Deprecated public String alert;
  @Deprecated public String trace;
  @Deprecated public String traceroute;
  @Deprecated public String lti_filename;
  @Deprecated public String client_id;
  @Deprecated public String ssrc1;
  @Deprecated public String ssrc2;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvayaSideEvent() {}

  /**
   * All-args constructor.
   * @param idx The new value for idx
   * @param loss The new value for loss
   * @param seqlossinstances The new value for seqlossinstances
   * @param rtd The new value for rtd
   * @param burstdensity The new value for burstdensity
   * @param alarm The new value for alarm
   * @param largestoutofsequence The new value for largestoutofsequence
   * @param packetcount1 The new value for packetcount1
   * @param gapdensity The new value for gapdensity
   * @param packetcount2 The new value for packetcount2
   * @param burstduration The new value for burstduration
   * @param time The new value for time
   * @param gapduration The new value for gapduration
   * @param outofseqinstances The new value for outofseqinstances
   * @param mos The new value for mos
   * @param side The new value for side
   * @param largestsequenceloss The new value for largestsequenceloss
   * @param dscpvalue The new value for dscpvalue
   * @param callindex The new value for callindex
   * @param owd The new value for owd
   * @param jitter The new value for jitter
   * @param trace_delays The new value for trace_delays
   * @param timestamp The new value for timestamp
   * @param alert The new value for alert
   * @param trace The new value for trace
   * @param traceroute The new value for traceroute
   * @param lti_filename The new value for lti_filename
   * @param client_id The new value for client_id
   * @param ssrc1 The new value for ssrc1
   * @param ssrc2 The new value for ssrc2
   */
  public AvayaSideEvent(String idx, Integer loss, String seqlossinstances, Integer rtd, String burstdensity, Integer alarm, String largestoutofsequence, String packetcount1, String gapdensity, String packetcount2, String burstduration, Long time, String gapduration, String outofseqinstances, Float mos, String side, String largestsequenceloss, String dscpvalue, String callindex, String owd, Integer jitter, String trace_delays, Long timestamp, String alert, String trace, String traceroute, String lti_filename, String client_id, String ssrc1, String ssrc2) {
    this.idx = idx;
    this.loss = loss;
    this.seqlossinstances = seqlossinstances;
    this.rtd = rtd;
    this.burstdensity = burstdensity;
    this.alarm = alarm;
    this.largestoutofsequence = largestoutofsequence;
    this.packetcount1 = packetcount1;
    this.gapdensity = gapdensity;
    this.packetcount2 = packetcount2;
    this.burstduration = burstduration;
    this.time = time;
    this.gapduration = gapduration;
    this.outofseqinstances = outofseqinstances;
    this.mos = mos;
    this.side = side;
    this.largestsequenceloss = largestsequenceloss;
    this.dscpvalue = dscpvalue;
    this.callindex = callindex;
    this.owd = owd;
    this.jitter = jitter;
    this.trace_delays = trace_delays;
    this.timestamp = timestamp;
    this.alert = alert;
    this.trace = trace;
    this.traceroute = traceroute;
    this.lti_filename = lti_filename;
    this.client_id = client_id;
    this.ssrc1 = ssrc1;
    this.ssrc2 = ssrc2;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return idx;
    case 1: return loss;
    case 2: return seqlossinstances;
    case 3: return rtd;
    case 4: return burstdensity;
    case 5: return alarm;
    case 6: return largestoutofsequence;
    case 7: return packetcount1;
    case 8: return gapdensity;
    case 9: return packetcount2;
    case 10: return burstduration;
    case 11: return time;
    case 12: return gapduration;
    case 13: return outofseqinstances;
    case 14: return mos;
    case 15: return side;
    case 16: return largestsequenceloss;
    case 17: return dscpvalue;
    case 18: return callindex;
    case 19: return owd;
    case 20: return jitter;
    case 21: return trace_delays;
    case 22: return timestamp;
    case 23: return alert;
    case 24: return trace;
    case 25: return traceroute;
    case 26: return lti_filename;
    case 27: return client_id;
    case 28: return ssrc1;
    case 29: return ssrc2;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: idx = (String)value$; break;
    case 1: loss = (Integer)value$; break;
    case 2: seqlossinstances = (String)value$; break;
    case 3: rtd = (Integer)value$; break;
    case 4: burstdensity = (String)value$; break;
    case 5: alarm = (Integer)value$; break;
    case 6: largestoutofsequence = (String)value$; break;
    case 7: packetcount1 = (String)value$; break;
    case 8: gapdensity = (String)value$; break;
    case 9: packetcount2 = (String)value$; break;
    case 10: burstduration = (String)value$; break;
    case 11: time = (Long)value$; break;
    case 12: gapduration = (String)value$; break;
    case 13: outofseqinstances = (String)value$; break;
    case 14: mos = (Float)value$; break;
    case 15: side = (String)value$; break;
    case 16: largestsequenceloss = (String)value$; break;
    case 17: dscpvalue = (String)value$; break;
    case 18: callindex = (String)value$; break;
    case 19: owd = (String)value$; break;
    case 20: jitter = (Integer)value$; break;
    case 21: trace_delays = (String)value$; break;
    case 22: timestamp = (Long)value$; break;
    case 23: alert = (String)value$; break;
    case 24: trace = (String)value$; break;
    case 25: traceroute = (String)value$; break;
    case 26: lti_filename = (String)value$; break;
    case 27: client_id = (String)value$; break;
    case 28: ssrc1 = (String)value$; break;
    case 29: ssrc2 = (String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'idx' field.
   * @return The value of the 'idx' field.
   */
  public String getIdx() {
    return idx;
  }

  /**
   * Sets the value of the 'idx' field.
   * @param value the value to set.
   */
  public void setIdx(String value) {
    this.idx = value;
  }

  /**
   * Gets the value of the 'loss' field.
   * @return The value of the 'loss' field.
   */
  public Integer getLoss() {
    return loss;
  }

  /**
   * Sets the value of the 'loss' field.
   * @param value the value to set.
   */
  public void setLoss(Integer value) {
    this.loss = value;
  }

  /**
   * Gets the value of the 'seqlossinstances' field.
   * @return The value of the 'seqlossinstances' field.
   */
  public String getSeqlossinstances() {
    return seqlossinstances;
  }

  /**
   * Sets the value of the 'seqlossinstances' field.
   * @param value the value to set.
   */
  public void setSeqlossinstances(String value) {
    this.seqlossinstances = value;
  }

  /**
   * Gets the value of the 'rtd' field.
   * @return The value of the 'rtd' field.
   */
  public Integer getRtd() {
    return rtd;
  }

  /**
   * Sets the value of the 'rtd' field.
   * @param value the value to set.
   */
  public void setRtd(Integer value) {
    this.rtd = value;
  }

  /**
   * Gets the value of the 'burstdensity' field.
   * @return The value of the 'burstdensity' field.
   */
  public String getBurstdensity() {
    return burstdensity;
  }

  /**
   * Sets the value of the 'burstdensity' field.
   * @param value the value to set.
   */
  public void setBurstdensity(String value) {
    this.burstdensity = value;
  }

  /**
   * Gets the value of the 'alarm' field.
   * @return The value of the 'alarm' field.
   */
  public Integer getAlarm() {
    return alarm;
  }

  /**
   * Sets the value of the 'alarm' field.
   * @param value the value to set.
   */
  public void setAlarm(Integer value) {
    this.alarm = value;
  }

  /**
   * Gets the value of the 'largestoutofsequence' field.
   * @return The value of the 'largestoutofsequence' field.
   */
  public String getLargestoutofsequence() {
    return largestoutofsequence;
  }

  /**
   * Sets the value of the 'largestoutofsequence' field.
   * @param value the value to set.
   */
  public void setLargestoutofsequence(String value) {
    this.largestoutofsequence = value;
  }

  /**
   * Gets the value of the 'packetcount1' field.
   * @return The value of the 'packetcount1' field.
   */
  public String getPacketcount1() {
    return packetcount1;
  }

  /**
   * Sets the value of the 'packetcount1' field.
   * @param value the value to set.
   */
  public void setPacketcount1(String value) {
    this.packetcount1 = value;
  }

  /**
   * Gets the value of the 'gapdensity' field.
   * @return The value of the 'gapdensity' field.
   */
  public String getGapdensity() {
    return gapdensity;
  }

  /**
   * Sets the value of the 'gapdensity' field.
   * @param value the value to set.
   */
  public void setGapdensity(String value) {
    this.gapdensity = value;
  }

  /**
   * Gets the value of the 'packetcount2' field.
   * @return The value of the 'packetcount2' field.
   */
  public String getPacketcount2() {
    return packetcount2;
  }

  /**
   * Sets the value of the 'packetcount2' field.
   * @param value the value to set.
   */
  public void setPacketcount2(String value) {
    this.packetcount2 = value;
  }

  /**
   * Gets the value of the 'burstduration' field.
   * @return The value of the 'burstduration' field.
   */
  public String getBurstduration() {
    return burstduration;
  }

  /**
   * Sets the value of the 'burstduration' field.
   * @param value the value to set.
   */
  public void setBurstduration(String value) {
    this.burstduration = value;
  }

  /**
   * Gets the value of the 'time' field.
   * @return The value of the 'time' field.
   */
  public Long getTime() {
    return time;
  }

  /**
   * Sets the value of the 'time' field.
   * @param value the value to set.
   */
  public void setTime(Long value) {
    this.time = value;
  }

  /**
   * Gets the value of the 'gapduration' field.
   * @return The value of the 'gapduration' field.
   */
  public String getGapduration() {
    return gapduration;
  }

  /**
   * Sets the value of the 'gapduration' field.
   * @param value the value to set.
   */
  public void setGapduration(String value) {
    this.gapduration = value;
  }

  /**
   * Gets the value of the 'outofseqinstances' field.
   * @return The value of the 'outofseqinstances' field.
   */
  public String getOutofseqinstances() {
    return outofseqinstances;
  }

  /**
   * Sets the value of the 'outofseqinstances' field.
   * @param value the value to set.
   */
  public void setOutofseqinstances(String value) {
    this.outofseqinstances = value;
  }

  /**
   * Gets the value of the 'mos' field.
   * @return The value of the 'mos' field.
   */
  public Float getMos() {
    return mos;
  }

  /**
   * Sets the value of the 'mos' field.
   * @param value the value to set.
   */
  public void setMos(Float value) {
    this.mos = value;
  }

  /**
   * Gets the value of the 'side' field.
   * @return The value of the 'side' field.
   */
  public String getSide() {
    return side;
  }

  /**
   * Sets the value of the 'side' field.
   * @param value the value to set.
   */
  public void setSide(String value) {
    this.side = value;
  }

  /**
   * Gets the value of the 'largestsequenceloss' field.
   * @return The value of the 'largestsequenceloss' field.
   */
  public String getLargestsequenceloss() {
    return largestsequenceloss;
  }

  /**
   * Sets the value of the 'largestsequenceloss' field.
   * @param value the value to set.
   */
  public void setLargestsequenceloss(String value) {
    this.largestsequenceloss = value;
  }

  /**
   * Gets the value of the 'dscpvalue' field.
   * @return The value of the 'dscpvalue' field.
   */
  public String getDscpvalue() {
    return dscpvalue;
  }

  /**
   * Sets the value of the 'dscpvalue' field.
   * @param value the value to set.
   */
  public void setDscpvalue(String value) {
    this.dscpvalue = value;
  }

  /**
   * Gets the value of the 'callindex' field.
   * @return The value of the 'callindex' field.
   */
  public String getCallindex() {
    return callindex;
  }

  /**
   * Sets the value of the 'callindex' field.
   * @param value the value to set.
   */
  public void setCallindex(String value) {
    this.callindex = value;
  }

  /**
   * Gets the value of the 'owd' field.
   * @return The value of the 'owd' field.
   */
  public String getOwd() {
    return owd;
  }

  /**
   * Sets the value of the 'owd' field.
   * @param value the value to set.
   */
  public void setOwd(String value) {
    this.owd = value;
  }

  /**
   * Gets the value of the 'jitter' field.
   * @return The value of the 'jitter' field.
   */
  public Integer getJitter() {
    return jitter;
  }

  /**
   * Sets the value of the 'jitter' field.
   * @param value the value to set.
   */
  public void setJitter(Integer value) {
    this.jitter = value;
  }

  /**
   * Gets the value of the 'trace_delays' field.
   * @return The value of the 'trace_delays' field.
   */
  public String getTraceDelays() {
    return trace_delays;
  }

  /**
   * Sets the value of the 'trace_delays' field.
   * @param value the value to set.
   */
  public void setTraceDelays(String value) {
    this.trace_delays = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public Long getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(Long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'alert' field.
   * @return The value of the 'alert' field.
   */
  public String getAlert() {
    return alert;
  }

  /**
   * Sets the value of the 'alert' field.
   * @param value the value to set.
   */
  public void setAlert(String value) {
    this.alert = value;
  }

  /**
   * Gets the value of the 'trace' field.
   * @return The value of the 'trace' field.
   */
  public String getTrace() {
    return trace;
  }

  /**
   * Sets the value of the 'trace' field.
   * @param value the value to set.
   */
  public void setTrace(String value) {
    this.trace = value;
  }

  /**
   * Gets the value of the 'traceroute' field.
   * @return The value of the 'traceroute' field.
   */
  public String getTraceroute() {
    return traceroute;
  }

  /**
   * Sets the value of the 'traceroute' field.
   * @param value the value to set.
   */
  public void setTraceroute(String value) {
    this.traceroute = value;
  }

  /**
   * Gets the value of the 'lti_filename' field.
   * @return The value of the 'lti_filename' field.
   */
  public String getLtiFilename() {
    return lti_filename;
  }

  /**
   * Sets the value of the 'lti_filename' field.
   * @param value the value to set.
   */
  public void setLtiFilename(String value) {
    this.lti_filename = value;
  }

  /**
   * Gets the value of the 'client_id' field.
   * @return The value of the 'client_id' field.
   */
  public String getClientId() {
    return client_id;
  }

  /**
   * Sets the value of the 'client_id' field.
   * @param value the value to set.
   */
  public void setClientId(String value) {
    this.client_id = value;
  }

  /**
   * Gets the value of the 'ssrc1' field.
   * @return The value of the 'ssrc1' field.
   */
  public String getSsrc1() {
    return ssrc1;
  }

  /**
   * Sets the value of the 'ssrc1' field.
   * @param value the value to set.
   */
  public void setSsrc1(String value) {
    this.ssrc1 = value;
  }

  /**
   * Gets the value of the 'ssrc2' field.
   * @return The value of the 'ssrc2' field.
   */
  public String getSsrc2() {
    return ssrc2;
  }

  /**
   * Sets the value of the 'ssrc2' field.
   * @param value the value to set.
   */
  public void setSsrc2(String value) {
    this.ssrc2 = value;
  }

  /**
   * Creates a new AvayaSideEvent RecordBuilder.
   * @return A new AvayaSideEvent RecordBuilder
   */
  public static Builder newBuilder() {
    return new Builder();
  }

  /**
   * Creates a new AvayaSideEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvayaSideEvent RecordBuilder
   */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }

  /**
   * Creates a new AvayaSideEvent RecordBuilder by copying an existing AvayaSideEvent instance.
   * @param other The existing instance to copy.
   * @return A new AvayaSideEvent RecordBuilder
   */
  public static Builder newBuilder(AvayaSideEvent other) {
    return new Builder(other);
  }

  /**
   * RecordBuilder for AvayaSideEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvayaSideEvent>
    implements org.apache.avro.data.RecordBuilder<AvayaSideEvent> {

    private String idx;
    private Integer loss;
    private String seqlossinstances;
    private Integer rtd;
    private String burstdensity;
    private Integer alarm;
    private String largestoutofsequence;
    private String packetcount1;
    private String gapdensity;
    private String packetcount2;
    private String burstduration;
    private Long time;
    private String gapduration;
    private String outofseqinstances;
    private Float mos;
    private String side;
    private String largestsequenceloss;
    private String dscpvalue;
    private String callindex;
    private String owd;
    private Integer jitter;
    private String trace_delays;
    private Long timestamp;
    private String alert;
    private String trace;
    private String traceroute;
    private String lti_filename;
    private String client_id;
    private String ssrc1;
    private String ssrc2;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.idx)) {
        this.idx = data().deepCopy(fields()[0].schema(), other.idx);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.loss)) {
        this.loss = data().deepCopy(fields()[1].schema(), other.loss);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.seqlossinstances)) {
        this.seqlossinstances = data().deepCopy(fields()[2].schema(), other.seqlossinstances);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.rtd)) {
        this.rtd = data().deepCopy(fields()[3].schema(), other.rtd);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.burstdensity)) {
        this.burstdensity = data().deepCopy(fields()[4].schema(), other.burstdensity);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.alarm)) {
        this.alarm = data().deepCopy(fields()[5].schema(), other.alarm);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.largestoutofsequence)) {
        this.largestoutofsequence = data().deepCopy(fields()[6].schema(), other.largestoutofsequence);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.packetcount1)) {
        this.packetcount1 = data().deepCopy(fields()[7].schema(), other.packetcount1);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.gapdensity)) {
        this.gapdensity = data().deepCopy(fields()[8].schema(), other.gapdensity);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.packetcount2)) {
        this.packetcount2 = data().deepCopy(fields()[9].schema(), other.packetcount2);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.burstduration)) {
        this.burstduration = data().deepCopy(fields()[10].schema(), other.burstduration);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.time)) {
        this.time = data().deepCopy(fields()[11].schema(), other.time);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.gapduration)) {
        this.gapduration = data().deepCopy(fields()[12].schema(), other.gapduration);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.outofseqinstances)) {
        this.outofseqinstances = data().deepCopy(fields()[13].schema(), other.outofseqinstances);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.mos)) {
        this.mos = data().deepCopy(fields()[14].schema(), other.mos);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.side)) {
        this.side = data().deepCopy(fields()[15].schema(), other.side);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.largestsequenceloss)) {
        this.largestsequenceloss = data().deepCopy(fields()[16].schema(), other.largestsequenceloss);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.dscpvalue)) {
        this.dscpvalue = data().deepCopy(fields()[17].schema(), other.dscpvalue);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.callindex)) {
        this.callindex = data().deepCopy(fields()[18].schema(), other.callindex);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.owd)) {
        this.owd = data().deepCopy(fields()[19].schema(), other.owd);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.jitter)) {
        this.jitter = data().deepCopy(fields()[20].schema(), other.jitter);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.trace_delays)) {
        this.trace_delays = data().deepCopy(fields()[21].schema(), other.trace_delays);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[22].schema(), other.timestamp);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.alert)) {
        this.alert = data().deepCopy(fields()[23].schema(), other.alert);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.trace)) {
        this.trace = data().deepCopy(fields()[24].schema(), other.trace);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.traceroute)) {
        this.traceroute = data().deepCopy(fields()[25].schema(), other.traceroute);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.lti_filename)) {
        this.lti_filename = data().deepCopy(fields()[26].schema(), other.lti_filename);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.client_id)) {
        this.client_id = data().deepCopy(fields()[27].schema(), other.client_id);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.ssrc1)) {
        this.ssrc1 = data().deepCopy(fields()[28].schema(), other.ssrc1);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.ssrc2)) {
        this.ssrc2 = data().deepCopy(fields()[29].schema(), other.ssrc2);
        fieldSetFlags()[29] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing AvayaSideEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(AvayaSideEvent other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.idx)) {
        this.idx = data().deepCopy(fields()[0].schema(), other.idx);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.loss)) {
        this.loss = data().deepCopy(fields()[1].schema(), other.loss);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.seqlossinstances)) {
        this.seqlossinstances = data().deepCopy(fields()[2].schema(), other.seqlossinstances);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.rtd)) {
        this.rtd = data().deepCopy(fields()[3].schema(), other.rtd);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.burstdensity)) {
        this.burstdensity = data().deepCopy(fields()[4].schema(), other.burstdensity);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.alarm)) {
        this.alarm = data().deepCopy(fields()[5].schema(), other.alarm);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.largestoutofsequence)) {
        this.largestoutofsequence = data().deepCopy(fields()[6].schema(), other.largestoutofsequence);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.packetcount1)) {
        this.packetcount1 = data().deepCopy(fields()[7].schema(), other.packetcount1);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.gapdensity)) {
        this.gapdensity = data().deepCopy(fields()[8].schema(), other.gapdensity);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.packetcount2)) {
        this.packetcount2 = data().deepCopy(fields()[9].schema(), other.packetcount2);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.burstduration)) {
        this.burstduration = data().deepCopy(fields()[10].schema(), other.burstduration);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.time)) {
        this.time = data().deepCopy(fields()[11].schema(), other.time);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.gapduration)) {
        this.gapduration = data().deepCopy(fields()[12].schema(), other.gapduration);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.outofseqinstances)) {
        this.outofseqinstances = data().deepCopy(fields()[13].schema(), other.outofseqinstances);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.mos)) {
        this.mos = data().deepCopy(fields()[14].schema(), other.mos);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.side)) {
        this.side = data().deepCopy(fields()[15].schema(), other.side);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.largestsequenceloss)) {
        this.largestsequenceloss = data().deepCopy(fields()[16].schema(), other.largestsequenceloss);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.dscpvalue)) {
        this.dscpvalue = data().deepCopy(fields()[17].schema(), other.dscpvalue);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.callindex)) {
        this.callindex = data().deepCopy(fields()[18].schema(), other.callindex);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.owd)) {
        this.owd = data().deepCopy(fields()[19].schema(), other.owd);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.jitter)) {
        this.jitter = data().deepCopy(fields()[20].schema(), other.jitter);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.trace_delays)) {
        this.trace_delays = data().deepCopy(fields()[21].schema(), other.trace_delays);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[22].schema(), other.timestamp);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.alert)) {
        this.alert = data().deepCopy(fields()[23].schema(), other.alert);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.trace)) {
        this.trace = data().deepCopy(fields()[24].schema(), other.trace);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.traceroute)) {
        this.traceroute = data().deepCopy(fields()[25].schema(), other.traceroute);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.lti_filename)) {
        this.lti_filename = data().deepCopy(fields()[26].schema(), other.lti_filename);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.client_id)) {
        this.client_id = data().deepCopy(fields()[27].schema(), other.client_id);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.ssrc1)) {
        this.ssrc1 = data().deepCopy(fields()[28].schema(), other.ssrc1);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.ssrc2)) {
        this.ssrc2 = data().deepCopy(fields()[29].schema(), other.ssrc2);
        fieldSetFlags()[29] = true;
      }
    }

    /**
      * Gets the value of the 'idx' field.
      * @return The value.
      */
    public String getIdx() {
      return idx;
    }

    /**
      * Sets the value of the 'idx' field.
      * @param value The value of 'idx'.
      * @return This builder.
      */
    public Builder setIdx(String value) {
      validate(fields()[0], value);
      this.idx = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'idx' field has been set.
      * @return True if the 'idx' field has been set, false otherwise.
      */
    public boolean hasIdx() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'idx' field.
      * @return This builder.
      */
    public Builder clearIdx() {
      idx = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'loss' field.
      * @return The value.
      */
    public Integer getLoss() {
      return loss;
    }

    /**
      * Sets the value of the 'loss' field.
      * @param value The value of 'loss'.
      * @return This builder.
      */
    public Builder setLoss(Integer value) {
      validate(fields()[1], value);
      this.loss = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'loss' field has been set.
      * @return True if the 'loss' field has been set, false otherwise.
      */
    public boolean hasLoss() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'loss' field.
      * @return This builder.
      */
    public Builder clearLoss() {
      loss = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'seqlossinstances' field.
      * @return The value.
      */
    public String getSeqlossinstances() {
      return seqlossinstances;
    }

    /**
      * Sets the value of the 'seqlossinstances' field.
      * @param value The value of 'seqlossinstances'.
      * @return This builder.
      */
    public Builder setSeqlossinstances(String value) {
      validate(fields()[2], value);
      this.seqlossinstances = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'seqlossinstances' field has been set.
      * @return True if the 'seqlossinstances' field has been set, false otherwise.
      */
    public boolean hasSeqlossinstances() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'seqlossinstances' field.
      * @return This builder.
      */
    public Builder clearSeqlossinstances() {
      seqlossinstances = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'rtd' field.
      * @return The value.
      */
    public Integer getRtd() {
      return rtd;
    }

    /**
      * Sets the value of the 'rtd' field.
      * @param value The value of 'rtd'.
      * @return This builder.
      */
    public Builder setRtd(Integer value) {
      validate(fields()[3], value);
      this.rtd = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'rtd' field has been set.
      * @return True if the 'rtd' field has been set, false otherwise.
      */
    public boolean hasRtd() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'rtd' field.
      * @return This builder.
      */
    public Builder clearRtd() {
      rtd = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'burstdensity' field.
      * @return The value.
      */
    public String getBurstdensity() {
      return burstdensity;
    }

    /**
      * Sets the value of the 'burstdensity' field.
      * @param value The value of 'burstdensity'.
      * @return This builder.
      */
    public Builder setBurstdensity(String value) {
      validate(fields()[4], value);
      this.burstdensity = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'burstdensity' field has been set.
      * @return True if the 'burstdensity' field has been set, false otherwise.
      */
    public boolean hasBurstdensity() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'burstdensity' field.
      * @return This builder.
      */
    public Builder clearBurstdensity() {
      burstdensity = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'alarm' field.
      * @return The value.
      */
    public Integer getAlarm() {
      return alarm;
    }

    /**
      * Sets the value of the 'alarm' field.
      * @param value The value of 'alarm'.
      * @return This builder.
      */
    public Builder setAlarm(Integer value) {
      validate(fields()[5], value);
      this.alarm = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'alarm' field has been set.
      * @return True if the 'alarm' field has been set, false otherwise.
      */
    public boolean hasAlarm() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'alarm' field.
      * @return This builder.
      */
    public Builder clearAlarm() {
      alarm = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'largestoutofsequence' field.
      * @return The value.
      */
    public String getLargestoutofsequence() {
      return largestoutofsequence;
    }

    /**
      * Sets the value of the 'largestoutofsequence' field.
      * @param value The value of 'largestoutofsequence'.
      * @return This builder.
      */
    public Builder setLargestoutofsequence(String value) {
      validate(fields()[6], value);
      this.largestoutofsequence = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'largestoutofsequence' field has been set.
      * @return True if the 'largestoutofsequence' field has been set, false otherwise.
      */
    public boolean hasLargestoutofsequence() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'largestoutofsequence' field.
      * @return This builder.
      */
    public Builder clearLargestoutofsequence() {
      largestoutofsequence = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'packetcount1' field.
      * @return The value.
      */
    public String getPacketcount1() {
      return packetcount1;
    }

    /**
      * Sets the value of the 'packetcount1' field.
      * @param value The value of 'packetcount1'.
      * @return This builder.
      */
    public Builder setPacketcount1(String value) {
      validate(fields()[7], value);
      this.packetcount1 = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'packetcount1' field has been set.
      * @return True if the 'packetcount1' field has been set, false otherwise.
      */
    public boolean hasPacketcount1() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'packetcount1' field.
      * @return This builder.
      */
    public Builder clearPacketcount1() {
      packetcount1 = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'gapdensity' field.
      * @return The value.
      */
    public String getGapdensity() {
      return gapdensity;
    }

    /**
      * Sets the value of the 'gapdensity' field.
      * @param value The value of 'gapdensity'.
      * @return This builder.
      */
    public Builder setGapdensity(String value) {
      validate(fields()[8], value);
      this.gapdensity = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'gapdensity' field has been set.
      * @return True if the 'gapdensity' field has been set, false otherwise.
      */
    public boolean hasGapdensity() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'gapdensity' field.
      * @return This builder.
      */
    public Builder clearGapdensity() {
      gapdensity = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'packetcount2' field.
      * @return The value.
      */
    public String getPacketcount2() {
      return packetcount2;
    }

    /**
      * Sets the value of the 'packetcount2' field.
      * @param value The value of 'packetcount2'.
      * @return This builder.
      */
    public Builder setPacketcount2(String value) {
      validate(fields()[9], value);
      this.packetcount2 = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'packetcount2' field has been set.
      * @return True if the 'packetcount2' field has been set, false otherwise.
      */
    public boolean hasPacketcount2() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'packetcount2' field.
      * @return This builder.
      */
    public Builder clearPacketcount2() {
      packetcount2 = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'burstduration' field.
      * @return The value.
      */
    public String getBurstduration() {
      return burstduration;
    }

    /**
      * Sets the value of the 'burstduration' field.
      * @param value The value of 'burstduration'.
      * @return This builder.
      */
    public Builder setBurstduration(String value) {
      validate(fields()[10], value);
      this.burstduration = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'burstduration' field has been set.
      * @return True if the 'burstduration' field has been set, false otherwise.
      */
    public boolean hasBurstduration() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'burstduration' field.
      * @return This builder.
      */
    public Builder clearBurstduration() {
      burstduration = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'time' field.
      * @return The value.
      */
    public Long getTime() {
      return time;
    }

    /**
      * Sets the value of the 'time' field.
      * @param value The value of 'time'.
      * @return This builder.
      */
    public Builder setTime(Long value) {
      validate(fields()[11], value);
      this.time = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'time' field has been set.
      * @return True if the 'time' field has been set, false otherwise.
      */
    public boolean hasTime() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'time' field.
      * @return This builder.
      */
    public Builder clearTime() {
      time = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'gapduration' field.
      * @return The value.
      */
    public String getGapduration() {
      return gapduration;
    }

    /**
      * Sets the value of the 'gapduration' field.
      * @param value The value of 'gapduration'.
      * @return This builder.
      */
    public Builder setGapduration(String value) {
      validate(fields()[12], value);
      this.gapduration = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'gapduration' field has been set.
      * @return True if the 'gapduration' field has been set, false otherwise.
      */
    public boolean hasGapduration() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'gapduration' field.
      * @return This builder.
      */
    public Builder clearGapduration() {
      gapduration = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'outofseqinstances' field.
      * @return The value.
      */
    public String getOutofseqinstances() {
      return outofseqinstances;
    }

    /**
      * Sets the value of the 'outofseqinstances' field.
      * @param value The value of 'outofseqinstances'.
      * @return This builder.
      */
    public Builder setOutofseqinstances(String value) {
      validate(fields()[13], value);
      this.outofseqinstances = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'outofseqinstances' field has been set.
      * @return True if the 'outofseqinstances' field has been set, false otherwise.
      */
    public boolean hasOutofseqinstances() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'outofseqinstances' field.
      * @return This builder.
      */
    public Builder clearOutofseqinstances() {
      outofseqinstances = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'mos' field.
      * @return The value.
      */
    public Float getMos() {
      return mos;
    }

    /**
      * Sets the value of the 'mos' field.
      * @param value The value of 'mos'.
      * @return This builder.
      */
    public Builder setMos(Float value) {
      validate(fields()[14], value);
      this.mos = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'mos' field has been set.
      * @return True if the 'mos' field has been set, false otherwise.
      */
    public boolean hasMos() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'mos' field.
      * @return This builder.
      */
    public Builder clearMos() {
      mos = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'side' field.
      * @return The value.
      */
    public String getSide() {
      return side;
    }

    /**
      * Sets the value of the 'side' field.
      * @param value The value of 'side'.
      * @return This builder.
      */
    public Builder setSide(String value) {
      validate(fields()[15], value);
      this.side = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'side' field has been set.
      * @return True if the 'side' field has been set, false otherwise.
      */
    public boolean hasSide() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'side' field.
      * @return This builder.
      */
    public Builder clearSide() {
      side = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'largestsequenceloss' field.
      * @return The value.
      */
    public String getLargestsequenceloss() {
      return largestsequenceloss;
    }

    /**
      * Sets the value of the 'largestsequenceloss' field.
      * @param value The value of 'largestsequenceloss'.
      * @return This builder.
      */
    public Builder setLargestsequenceloss(String value) {
      validate(fields()[16], value);
      this.largestsequenceloss = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'largestsequenceloss' field has been set.
      * @return True if the 'largestsequenceloss' field has been set, false otherwise.
      */
    public boolean hasLargestsequenceloss() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'largestsequenceloss' field.
      * @return This builder.
      */
    public Builder clearLargestsequenceloss() {
      largestsequenceloss = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'dscpvalue' field.
      * @return The value.
      */
    public String getDscpvalue() {
      return dscpvalue;
    }

    /**
      * Sets the value of the 'dscpvalue' field.
      * @param value The value of 'dscpvalue'.
      * @return This builder.
      */
    public Builder setDscpvalue(String value) {
      validate(fields()[17], value);
      this.dscpvalue = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'dscpvalue' field has been set.
      * @return True if the 'dscpvalue' field has been set, false otherwise.
      */
    public boolean hasDscpvalue() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'dscpvalue' field.
      * @return This builder.
      */
    public Builder clearDscpvalue() {
      dscpvalue = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'callindex' field.
      * @return The value.
      */
    public String getCallindex() {
      return callindex;
    }

    /**
      * Sets the value of the 'callindex' field.
      * @param value The value of 'callindex'.
      * @return This builder.
      */
    public Builder setCallindex(String value) {
      validate(fields()[18], value);
      this.callindex = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'callindex' field has been set.
      * @return True if the 'callindex' field has been set, false otherwise.
      */
    public boolean hasCallindex() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'callindex' field.
      * @return This builder.
      */
    public Builder clearCallindex() {
      callindex = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'owd' field.
      * @return The value.
      */
    public String getOwd() {
      return owd;
    }

    /**
      * Sets the value of the 'owd' field.
      * @param value The value of 'owd'.
      * @return This builder.
      */
    public Builder setOwd(String value) {
      validate(fields()[19], value);
      this.owd = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'owd' field has been set.
      * @return True if the 'owd' field has been set, false otherwise.
      */
    public boolean hasOwd() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'owd' field.
      * @return This builder.
      */
    public Builder clearOwd() {
      owd = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'jitter' field.
      * @return The value.
      */
    public Integer getJitter() {
      return jitter;
    }

    /**
      * Sets the value of the 'jitter' field.
      * @param value The value of 'jitter'.
      * @return This builder.
      */
    public Builder setJitter(Integer value) {
      validate(fields()[20], value);
      this.jitter = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'jitter' field has been set.
      * @return True if the 'jitter' field has been set, false otherwise.
      */
    public boolean hasJitter() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'jitter' field.
      * @return This builder.
      */
    public Builder clearJitter() {
      jitter = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'trace_delays' field.
      * @return The value.
      */
    public String getTraceDelays() {
      return trace_delays;
    }

    /**
      * Sets the value of the 'trace_delays' field.
      * @param value The value of 'trace_delays'.
      * @return This builder.
      */
    public Builder setTraceDelays(String value) {
      validate(fields()[21], value);
      this.trace_delays = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'trace_delays' field has been set.
      * @return True if the 'trace_delays' field has been set, false otherwise.
      */
    public boolean hasTraceDelays() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'trace_delays' field.
      * @return This builder.
      */
    public Builder clearTraceDelays() {
      trace_delays = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public Long getTimestamp() {
      return timestamp;
    }

    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public Builder setTimestamp(Long value) {
      validate(fields()[22], value);
      this.timestamp = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public Builder clearTimestamp() {
      timestamp = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'alert' field.
      * @return The value.
      */
    public String getAlert() {
      return alert;
    }

    /**
      * Sets the value of the 'alert' field.
      * @param value The value of 'alert'.
      * @return This builder.
      */
    public Builder setAlert(String value) {
      validate(fields()[23], value);
      this.alert = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'alert' field has been set.
      * @return True if the 'alert' field has been set, false otherwise.
      */
    public boolean hasAlert() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'alert' field.
      * @return This builder.
      */
    public Builder clearAlert() {
      alert = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'trace' field.
      * @return The value.
      */
    public String getTrace() {
      return trace;
    }

    /**
      * Sets the value of the 'trace' field.
      * @param value The value of 'trace'.
      * @return This builder.
      */
    public Builder setTrace(String value) {
      validate(fields()[24], value);
      this.trace = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'trace' field has been set.
      * @return True if the 'trace' field has been set, false otherwise.
      */
    public boolean hasTrace() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'trace' field.
      * @return This builder.
      */
    public Builder clearTrace() {
      trace = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'traceroute' field.
      * @return The value.
      */
    public String getTraceroute() {
      return traceroute;
    }

    /**
      * Sets the value of the 'traceroute' field.
      * @param value The value of 'traceroute'.
      * @return This builder.
      */
    public Builder setTraceroute(String value) {
      validate(fields()[25], value);
      this.traceroute = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'traceroute' field has been set.
      * @return True if the 'traceroute' field has been set, false otherwise.
      */
    public boolean hasTraceroute() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'traceroute' field.
      * @return This builder.
      */
    public Builder clearTraceroute() {
      traceroute = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'lti_filename' field.
      * @return The value.
      */
    public String getLtiFilename() {
      return lti_filename;
    }

    /**
      * Sets the value of the 'lti_filename' field.
      * @param value The value of 'lti_filename'.
      * @return This builder.
      */
    public Builder setLtiFilename(String value) {
      validate(fields()[26], value);
      this.lti_filename = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'lti_filename' field has been set.
      * @return True if the 'lti_filename' field has been set, false otherwise.
      */
    public boolean hasLtiFilename() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'lti_filename' field.
      * @return This builder.
      */
    public Builder clearLtiFilename() {
      lti_filename = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'client_id' field.
      * @return The value.
      */
    public String getClientId() {
      return client_id;
    }

    /**
      * Sets the value of the 'client_id' field.
      * @param value The value of 'client_id'.
      * @return This builder.
      */
    public Builder setClientId(String value) {
      validate(fields()[27], value);
      this.client_id = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'client_id' field has been set.
      * @return True if the 'client_id' field has been set, false otherwise.
      */
    public boolean hasClientId() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'client_id' field.
      * @return This builder.
      */
    public Builder clearClientId() {
      client_id = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'ssrc1' field.
      * @return The value.
      */
    public String getSsrc1() {
      return ssrc1;
    }

    /**
      * Sets the value of the 'ssrc1' field.
      * @param value The value of 'ssrc1'.
      * @return This builder.
      */
    public Builder setSsrc1(String value) {
      validate(fields()[28], value);
      this.ssrc1 = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'ssrc1' field has been set.
      * @return True if the 'ssrc1' field has been set, false otherwise.
      */
    public boolean hasSsrc1() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'ssrc1' field.
      * @return This builder.
      */
    public Builder clearSsrc1() {
      ssrc1 = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'ssrc2' field.
      * @return The value.
      */
    public String getSsrc2() {
      return ssrc2;
    }

    /**
      * Sets the value of the 'ssrc2' field.
      * @param value The value of 'ssrc2'.
      * @return This builder.
      */
    public Builder setSsrc2(String value) {
      validate(fields()[29], value);
      this.ssrc2 = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'ssrc2' field has been set.
      * @return True if the 'ssrc2' field has been set, false otherwise.
      */
    public boolean hasSsrc2() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'ssrc2' field.
      * @return This builder.
      */
    public Builder clearSsrc2() {
      ssrc2 = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AvayaSideEvent build() {
      try {
        AvayaSideEvent record = new AvayaSideEvent();
        record.idx = fieldSetFlags()[0] ? this.idx : (String) defaultValue(fields()[0]);
        record.loss = fieldSetFlags()[1] ? this.loss : (Integer) defaultValue(fields()[1]);
        record.seqlossinstances = fieldSetFlags()[2] ? this.seqlossinstances : (String) defaultValue(fields()[2]);
        record.rtd = fieldSetFlags()[3] ? this.rtd : (Integer) defaultValue(fields()[3]);
        record.burstdensity = fieldSetFlags()[4] ? this.burstdensity : (String) defaultValue(fields()[4]);
        record.alarm = fieldSetFlags()[5] ? this.alarm : (Integer) defaultValue(fields()[5]);
        record.largestoutofsequence = fieldSetFlags()[6] ? this.largestoutofsequence : (String) defaultValue(fields()[6]);
        record.packetcount1 = fieldSetFlags()[7] ? this.packetcount1 : (String) defaultValue(fields()[7]);
        record.gapdensity = fieldSetFlags()[8] ? this.gapdensity : (String) defaultValue(fields()[8]);
        record.packetcount2 = fieldSetFlags()[9] ? this.packetcount2 : (String) defaultValue(fields()[9]);
        record.burstduration = fieldSetFlags()[10] ? this.burstduration : (String) defaultValue(fields()[10]);
        record.time = fieldSetFlags()[11] ? this.time : (Long) defaultValue(fields()[11]);
        record.gapduration = fieldSetFlags()[12] ? this.gapduration : (String) defaultValue(fields()[12]);
        record.outofseqinstances = fieldSetFlags()[13] ? this.outofseqinstances : (String) defaultValue(fields()[13]);
        record.mos = fieldSetFlags()[14] ? this.mos : (Float) defaultValue(fields()[14]);
        record.side = fieldSetFlags()[15] ? this.side : (String) defaultValue(fields()[15]);
        record.largestsequenceloss = fieldSetFlags()[16] ? this.largestsequenceloss : (String) defaultValue(fields()[16]);
        record.dscpvalue = fieldSetFlags()[17] ? this.dscpvalue : (String) defaultValue(fields()[17]);
        record.callindex = fieldSetFlags()[18] ? this.callindex : (String) defaultValue(fields()[18]);
        record.owd = fieldSetFlags()[19] ? this.owd : (String) defaultValue(fields()[19]);
        record.jitter = fieldSetFlags()[20] ? this.jitter : (Integer) defaultValue(fields()[20]);
        record.trace_delays = fieldSetFlags()[21] ? this.trace_delays : (String) defaultValue(fields()[21]);
        record.timestamp = fieldSetFlags()[22] ? this.timestamp : (Long) defaultValue(fields()[22]);
        record.alert = fieldSetFlags()[23] ? this.alert : (String) defaultValue(fields()[23]);
        record.trace = fieldSetFlags()[24] ? this.trace : (String) defaultValue(fields()[24]);
        record.traceroute = fieldSetFlags()[25] ? this.traceroute : (String) defaultValue(fields()[25]);
        record.lti_filename = fieldSetFlags()[26] ? this.lti_filename : (String) defaultValue(fields()[26]);
        record.client_id = fieldSetFlags()[27] ? this.client_id : (String) defaultValue(fields()[27]);
        record.ssrc1 = fieldSetFlags()[28] ? this.ssrc1 : (String) defaultValue(fields()[28]);
        record.ssrc2 = fieldSetFlags()[29] ? this.ssrc2 : (String) defaultValue(fields()[29]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AvayaSideEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<AvayaSideEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AvayaSideEvent>
    READER$ = (org.apache.avro.io.DatumReader<AvayaSideEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
